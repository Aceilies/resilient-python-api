/*
 * Resilient Systems, Inc. ("Resilient") is willing to license software
 * or access to software to the company or entity that will be using or
 * accessing the software and documentation and that you represent as
 * an employee or authorized agent ("you" or "your") only on the condition
 * that you accept all of the terms of this license agreement.
 *
 * The software and documentation within Resilient's Development Kit are
 * copyrighted by and contain confidential information of Resilient. By
 * accessing and/or using this software and documentation, you agree that
 * while you may make derivative works of them, you:
 *
 * 1)  will not use the software and documentation or any derivative
 *     works for anything but your internal business purposes in
 *     conjunction your licensed used of Resilient's software, nor
 * 2)  provide or disclose the software and documentation or any
 *     derivative works to any third party.
 *
 * THIS SOFTWARE AND DOCUMENTATION IS PROVIDED "AS IS" AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL RESILIENT BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// <auto-generated>
// IBM Resilient REST API version 28.1
//
// Generated by <a href="http://enunciate.webcohesion.com">Enunciate</a>.
// </auto-generated>

using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace Co3.Rest.Dto
{
    /// <summary>
    ///  A single result from an elastic search
    /// </summary>
    [JsonObject(MemberSerialization.OptIn)]
    public class SearchExResultDto 
    {
        /// <summary>
        /// The type id of the result .
        /// 
        /// Must be one of the following:
        /// <pre>
        ///  incident
        ///  task
        ///  note
        ///  milestone
        ///  artifact
        ///  attachment
        ///  datatable
        ///  </pre>
        /// 
        /// For more information about type ids, refer to <a href="json_TypeId.html">this</a>
        /// </summary>
        [JsonProperty("type_id")]
        public TypeId TypeId { get; set; }

        /// <summary>
        /// The unique identifier of the Organization that this search result belongs to.
        /// </summary>
        [JsonProperty("org_id")]
        public int OrgId { get; set; }

        /// <summary>
        /// The unique identifier of the search result
        /// </summary>
        [JsonProperty("obj_id")]
        public int ObjId { get; set; }

        /// <summary>
        /// The name of the search result object.  In the case of a data table row, this name represents the
        /// programmatic name of the data table.
        /// 
        /// Can be null for objects with no names (e.g. notes)
        /// </summary>
        [JsonProperty("obj_name")]
        public string ObjName { get; set; }

        /// <summary>
        /// The name of the owner of the search result.  Search results of types milestone, artifact,
        /// attachment and datatable do not support the notion of 'owner' so the value would be null.
        /// 
        /// In the case of a comment (type = note), obj_owner_id would represent a user who has subsequently
        /// modified the comment.  If it hasn't been modified, this value would be null.
        /// </summary>
        [JsonProperty("obj_owner_id")]
        public ObjectHandle ObjOwner { get; set; }

        /// <summary>
        /// The name of the creator of the search result.  Datatables do not support a creator, so search results
        /// of that type would be null.
        /// </summary>
        [JsonProperty("obj_creator_id")]
        public ObjectHandle ObjCreator { get; set; }

        /// <summary>
        /// The state of the search result.  This is only applicable for incidents and tasks.
        /// </summary>
        [JsonProperty("obj_state")]
        public string ObjState { get; set; }

        /// <summary>
        /// The creation date of the search result.  This can be null for results which do not have a creation date stored.
        /// </summary>
        [JsonProperty("obj_create_date")]
        public DateTime ObjCreateDate { get; set; }

        /// <summary>
        /// The id of the incident to which the search result belongs.  If the search result is an incident, then inc_id
        /// is identical to obj_id.
        /// </summary>
        [JsonProperty("inc_id")]
        public int IncId { get; set; }

        /// <summary>
        /// The name of the incident to which the search result belongs.  If the search result is an incident, then inc_name
        /// is identical to obj_name.
        /// </summary>
        [JsonProperty("inc_name")]
        public string IncName { get; set; }

        /// <summary>
        /// The name of the owner of the incident to which the search result belongs.  If the search result is an incident,
        /// then inc_owner is identical to obj_owner.
        /// </summary>
        [JsonProperty("inc_owner_id")]
        public ObjectHandle IncOwner { get; set; }

        /// <summary>
        /// The id of the task to which the search result belongs.  This is only populated for task, task attachment,
        /// and task notes.  In the case of task, task_id is identical to obj_id.
        /// If the search result belongs to an incident only (i.e. incident, incident note, incident attachment, artifact
        /// or datatable) then this result is null.
        /// </summary>
        [JsonProperty("task_id")]
        public int TaskId { get; set; }

        /// <summary>
        /// The name of the task to which the search result belongs.  This is only populated for task, task attachment,
        /// and task notes.  In the case of task, task_name is identical to obj_name.
        /// If the search result belongs to an incident only (i.e. incident, incident note, incident attachment, artifact
        /// or datatable) then this result is null.
        /// </summary>
        [JsonProperty("task_name")]
        public string TaskName { get; set; }

        /// <summary>
        /// The name of the search field where a match was found.
        /// </summary>
        [JsonProperty("match_field_name")]
        public string FieldName { get; set; }

        /// <summary>
        /// The value of the search field where a match was found, including an indication of what term(s) matched the
        /// full text search.
        /// </summary>
        [JsonProperty("match_field_value")]
        public string FieldValue { get; set; }

        /// <summary>
        /// A score value for the search hit
        /// </summary>
        [JsonProperty("score")]
        public float Score { get; set; }

        /// <summary>
        /// The actual object returned by the search
        /// </summary>
        [JsonProperty("result")]
        public object Result { get; set; }
    }
}
