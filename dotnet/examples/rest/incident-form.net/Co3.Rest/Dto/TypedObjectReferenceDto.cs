/*
 * Resilient Systems, Inc. ("Resilient") is willing to license software
 * or access to software to the company or entity that will be using or
 * accessing the software and documentation and that you represent as
 * an employee or authorized agent ("you" or "your") only on the condition
 * that you accept all of the terms of this license agreement.
 *
 * The software and documentation within Resilient's Development Kit are
 * copyrighted by and contain confidential information of Resilient. By
 * accessing and/or using this software and documentation, you agree that
 * while you may make derivative works of them, you:
 *
 * 1)  will not use the software and documentation or any derivative
 *     works for anything but your internal business purposes in
 *     conjunction your licensed used of Resilient's software, nor
 * 2)  provide or disclose the software and documentation or any
 *     derivative works to any third party.
 *
 * THIS SOFTWARE AND DOCUMENTATION IS PROVIDED "AS IS" AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL RESILIENT BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// <auto-generated>
// IBM Resilient REST API version 28.1
//
// Generated by <a href="http://enunciate.webcohesion.com">Enunciate</a>.
// </auto-generated>

using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace Co3.Rest.Dto
{
    /// <summary>
    ///  An instance of an object and the <a href="json_TypeDTO.html">type</a> of that object instance.
    ///  <p>
    ///  <p>This differs from an <a href="json_ObjectHandle.html">ObjectHandle</a> in that the type is provided along
    ///  with the object name and type name. An object handle on the other hand may not have the names available depending
    ///  on how the client has requested the <a href="json_ObjectHandleFormat.html">ObjectHandleFormat</a>.
    /// 
    ///  <p>In addition this reference provides the full parent instance hierarchy for the object. For example, a <b>note</b>
    ///  will have either a parent incident or a task. A task instance will have a parent incident. Null indicates the
    ///  instance has no parent.
    /// </summary>
    [JsonObject(MemberSerialization.OptIn)]
    public class TypedObjectReferenceDto 
    {
        /// <summary>
        /// Parent of this instance. Null if the instance has no parent.
        /// </summary>
        [JsonProperty("parent")]
        public TypedObjectReferenceDto Parent { get; set; }

        /// <summary>
        /// Id of the instance reference.
        /// </summary>
        [JsonProperty("object_id")]
        public int ObjectId { get; set; }

        /// <summary>
        /// Name of the instance reference.
        /// </summary>
        [JsonProperty("object_name")]
        public string ObjectName { get; set; }

        /// <summary>
        /// Id of the <a href="json_TypeDTO.html">type</a> of the reference.
        /// </summary>
        [JsonProperty("type_id")]
        public int TypeId { get; set; }

        /// <summary>
        /// Name of the <a href="json_TypeDTO.html">type</a> of the reference.
        /// </summary>
        [JsonProperty("type_name")]
        public string TypeName { get; set; }
    }
}
