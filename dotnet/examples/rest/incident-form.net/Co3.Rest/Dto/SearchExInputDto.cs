/*
 * Resilient Systems, Inc. ("Resilient") is willing to license software
 * or access to software to the company or entity that will be using or
 * accessing the software and documentation and that you represent as
 * an employee or authorized agent ("you" or "your") only on the condition
 * that you accept all of the terms of this license agreement.
 *
 * The software and documentation within Resilient's Development Kit are
 * copyrighted by and contain confidential information of Resilient. By
 * accessing and/or using this software and documentation, you agree that
 * while you may make derivative works of them, you:
 *
 * 1)  will not use the software and documentation or any derivative
 *     works for anything but your internal business purposes in
 *     conjunction your licensed used of Resilient's software, nor
 * 2)  provide or disclose the software and documentation or any
 *     derivative works to any third party.
 *
 * THIS SOFTWARE AND DOCUMENTATION IS PROVIDED "AS IS" AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL RESILIENT BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// <auto-generated>
// IBM Resilient REST API version 28.1
//
// Generated by <a href="http://enunciate.webcohesion.com">Enunciate</a>.
// </auto-generated>

using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace Co3.Rest.Dto
{
    /// <summary>
    ///  Parameters for performing a search
    /// </summary>
    [JsonObject(MemberSerialization.OptIn)]
    public class SearchExInputDto 
    {
        /// <summary>
        /// The org to restrict search to (or null for all orgs which the user is a member of)
        /// </summary>
        [JsonProperty("org_id")]
        public int OrgId { get; set; }

        /// <summary>
        /// The text to search for
        /// </summary>
        [JsonProperty("query")]
        public string Query { get; set; }

        /// <summary>
        /// The types of object to restrict the search to.  Can be null to request all types
        /// 
        /// Types are the string form of the internal type id of the Resilient type.
        /// 
        /// Composed of the following:
        /// <pre>
        ///  incident
        ///  task
        ///  note
        ///  milestone
        ///  artifact
        ///  attachment
        ///  datatable
        ///  </pre>
        /// 
        /// For more information about type ids, refer to <a href="json_TypeId.html">this</a>
        /// </summary>
        [JsonProperty("types")]
        public List<TypeId> Types { get; set; }

        /// <summary>
        /// Filters for the query. The key is the <a href="json_TypeId.html">TypeId</a> ("incident", "task", ...), and, due
        /// to legacy reasons, the value is an array consisting of 1 <a href="json_QueryFilterDTO.html">QueryFilterDTO</a>
        /// to store all the conditions on that TypeId
        /// </summary>
        [JsonProperty("filters")]
        public Dictionary<TypeId, List<QueryFilterDto>> Filters { get; set; }

        /// <summary>
        /// The minimum number of results to retrieve for a given search.  If not specified, a server-specified limit
        /// will be imposed
        /// </summary>
        [JsonProperty("min_required_results")]
        public int MinRequiredResults { get; set; }
    }
}
