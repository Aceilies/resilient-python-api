/*
 * Resilient Systems, Inc. ("Resilient") is willing to license software
 * or access to software to the company or entity that will be using or
 * accessing the software and documentation and that you represent as
 * an employee or authorized agent ("you" or "your") only on the condition
 * that you accept all of the terms of this license agreement.
 *
 * The software and documentation within Resilient's Development Kit are
 * copyrighted by and contain confidential information of Resilient. By
 * accessing and/or using this software and documentation, you agree that
 * while you may make derivative works of them, you:
 *
 * 1)  will not use the software and documentation or any derivative
 *     works for anything but your internal business purposes in
 *     conjunction your licensed used of Resilient's software, nor
 * 2)  provide or disclose the software and documentation or any
 *     derivative works to any third party.
 *
 * THIS SOFTWARE AND DOCUMENTATION IS PROVIDED "AS IS" AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL RESILIENT BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// <auto-generated>
// IBM Resilient REST API version 28.1
//
// Generated by <a href="http://enunciate.webcohesion.com">Enunciate</a>.
// </auto-generated>

using System;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace Co3.Rest.Dto
{
    /// <summary>
    ///  Definition of an artifact type.
    /// </summary>
    [JsonObject(MemberSerialization.OptIn)]
    public class IncidentArtifactTypeDto 
    {
        /// <summary>
        /// ID of the artifact type. This is a read-only field.
        /// </summary>
        [JsonProperty("id")]
        public int Id { get; set; }

        /// <summary>
        /// Display name of the artifact type.
        /// </summary>
        [JsonProperty("name")]
        public string Name { get; set; }

        /// <summary>
        /// Description of the artifact type.
        /// </summary>
        [JsonProperty("desc")]
        public string Desc { get; set; }

        /// <summary>
        /// The value of an artifact of this type is a file.  The artifact is created using <a href="resource_IncidentArtifactREST.html#resource_IncidentArtifactREST_uploadFileArtifact_POST">IncidentArtifactREST</a> resource.
        /// </summary>
        [JsonProperty("file")]
        public bool File { get; set; }

        /// <summary>
        /// This is used to validate the value of artifacts of this type.
        /// </summary>
        [JsonProperty("reg_exp")]
        public string RegExp { get; set; }

        /// <summary>
        /// When true, the value of an artifact of this is type is scanned, and if multiple artifact values are detected
        /// multiple artifacts are created from the single artifact.
        /// </summary>
        [JsonProperty("multi_aware")]
        public bool MultiAware { get; set; }

        /// <summary>
        /// This is the name used by scripting when referencing this artifact type.  This is also can be used when
        /// referencing artifact types by <a href="json_ObjectHandle.html">ObjectHandle</a>.
        /// </summary>
        [JsonProperty("programmatic_name")]
        public string ProgrammaticName { get; set; }

        /// <summary>
        /// The system UUID of the object used as a backup to detect renames
        /// </summary>
        [JsonProperty("uuid")]
        public Guid Uuid { get; set; }

        /// <summary>
        /// 
        /// </summary>
        [JsonProperty("parse_as_csv")]
        public bool ParseAsCsv { get; set; }

        /// <summary>
        /// If true this artifacts of this type are used for determining relationships to other incidents. Otherwise the
        /// artifact is not used for determining relationships.
        /// </summary>
        [JsonProperty("use_for_relationships")]
        public bool UseForRelationships { get; set; }

        /// <summary>
        /// true if defined by the system, otherwise false
        /// </summary>
        [JsonProperty("system")]
        public bool System { get; set; }

        /// <summary>
        /// Splitter on pattern used with multiple values.  This is a readonly property.
        /// </summary>
        [JsonProperty("split_on")]
        public string SplitOn { get; set; }

        /// <summary>
        /// Version of the artifact type.  This is a read-only field.
        /// </summary>
        [JsonProperty("version")]
        public int Version { get; set; }

        /// <summary>
        /// Is the artifact type enabled?
        /// </summary>
        [JsonProperty("enabled")]
        public bool Enabled { get; set; }

        /// <summary>
        /// The key which uniquely identifies the object being imported
        /// </summary>
        [JsonProperty("export_key")]
        public string ExportKey { get; set; }
    }
}
