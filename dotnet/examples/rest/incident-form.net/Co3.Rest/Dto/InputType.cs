/*
 * Resilient Systems, Inc. ("Resilient") is willing to license software
 * or access to software to the company or entity that will be using or
 * accessing the software and documentation and that you represent as
 * an employee or authorized agent ("you" or "your") only on the condition
 * that you accept all of the terms of this license agreement.
 *
 * The software and documentation within Resilient's Development Kit are
 * copyrighted by and contain confidential information of Resilient. By
 * accessing and/or using this software and documentation, you agree that
 * while you may make derivative works of them, you:
 *
 * 1)  will not use the software and documentation or any derivative
 *     works for anything but your internal business purposes in
 *     conjunction your licensed used of Resilient's software, nor
 * 2)  provide or disclose the software and documentation or any
 *     derivative works to any third party.
 *
 * THIS SOFTWARE AND DOCUMENTATION IS PROVIDED "AS IS" AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL RESILIENT BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// <auto-generated>
// IBM Resilient REST API version 28.1
//
// Generated by <a href="http://enunciate.webcohesion.com">Enunciate</a>.
// </auto-generated>

using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Co3.Rest.Dto
{
    [DataContract]
    [JsonConverter(typeof(StringEnumConverter))]
    public enum InputType
    {
        /// <summary>
        /// Unspecified enum value.
        /// </summary>
        [JsonIgnore]
        Undefined,

        /// <summary>
        /// A boolean field.
        /// </summary>
        [EnumMember(Value = "boolean")]
        Boolean,

        /// <summary>
        /// A date picker field.
        /// </summary>
        [EnumMember(Value = "datepicker")]
        DatePicker,

        /// <summary>
        /// A multiselect field.  Multiple values can be selected from a picklist.  The valid picklist values
        /// are stored in the <a href="json_FieldDefDTO.html#reslink_values">fieldDefDTO (values property)</a>
        /// </summary>
        [EnumMember(Value = "multiselect")]
        MultiSelect,

        /// <summary>
        /// A select field.  A single value can be selected from the picklist.  The valid picklist values
        /// are stored in the <a href="json_FieldDefDTO.html#reslink_values">fieldDefDTO (values property)</a>
        /// </summary>
        [EnumMember(Value = "select")]
        Select,

        /// <summary>
        /// A free-form text field (single line).
        /// </summary>
        [EnumMember(Value = "text")]
        Text,

        /// <summary>
        /// A free-form text field (multiple lines).
        /// </summary>
        [EnumMember(Value = "textarea")]
        TextArea,

        /// <summary>
        /// A number (integer) value.
        /// </summary>
        [EnumMember(Value = "number")]
        Number,

        /// <summary>
        /// Internal use only.
        /// </summary>
        [EnumMember(Value = "multiselect_incident")]
        MultiSelectIncident,

        /// <summary>
        /// Internal use only.
        /// </summary>
        [EnumMember(Value = "multiselect_task")]
        MultiSelectTask,

        /// <summary>
        /// Internal use only.
        /// </summary>
        [EnumMember(Value = "select_owner")]
        SelectOwner,

        /// <summary>
        /// Internal use only.
        /// </summary>
        [EnumMember(Value = "multiselect_members")]
        MultiSelectMembers,

        /// <summary>
        /// A date/time picker field.
        /// </summary>
        [EnumMember(Value = "datetimepicker")]
        DateTimePicker,

        /// <summary>
        /// A user selection field.
        /// </summary>
        [EnumMember(Value = "select_user")]
        SelectUser,

        /// <summary>
        /// No input type specified.  This is used for display-only fields.
        /// </summary>
        [EnumMember(Value = "none")]
        None
    }
}
