<?xml version="1.0" encoding="UTF-8"?>
<!-- created by the gradle mule plugin -->

<mule xmlns:context="http://www.springframework.org/schema/context"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:https="http://www.mulesoft.org/schema/mule/https" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd">
    <spring:beans>
        <context:property-placeholder 
             
             location="classpath:co3-hipchat-app.properties,
                       file:${user.home}/co3/co3-hipchat-app.properties" />
    </spring:beans>
    <spring:beans>
        <spring:bean id="Co3JmsConnectionFactory" name="Co3JmsConnectionFactory" class="com.co3.activemq.Co3ActiveMQSslConnectionFactory">
            <spring:constructor-arg index="0" value="${co3.jmsUrl}"/>
            <spring:property name="trustStore" value="${co3.trustStore}"/>
            <spring:property name="trustStorePassword" value="${co3.trustStorePassword}"/>
        </spring:bean>
    </spring:beans>
    <jms:connector name="Co3Connector" validateConnections="true" doc:name="Co3Connector" password="${co3.password}" specification="1.1" username="${co3.user}">
        <spring:property name="connectionFactory" ref="Co3JmsConnectionFactory"/>
    </jms:connector>
    <flow name="mule-configFlow1" doc:name="mule-configFlow1">
        <jms:inbound-endpoint connector-ref="Co3Connector" doc:name="JMS" queue="${co3.queueName}" exchange-pattern="request-response"/>
        <response>
            <set-payload value="{&quot;message_type&quot;: 0, &quot;message&quot;: &quot;Completed processing&quot;, &quot;complete&quot;: true}" doc:name="Set Payload for Co3 Reply"/>
        </response>
        <json:json-to-object-transformer returnClass="java.util.LinkedHashMap" doc:name="Convert Co3 JSON String to Map Object" mapper-ref="	"/>
        <scripting:transformer doc:name="Make HipChat object with Groovy">
            <scripting:script engine="Groovy"><![CDATA[def inc = payload.incident

// Convert the IDs to names using the metadata.
def values = payload.type_info.incident.fields.incident_type_ids.values

String types = inc['incident_type_ids'].collect {
    values[it.value.toString()].label
}.join(", ")

List<String> lines = []

lines.add(String.format("Incident '%s' created.", inc['name']))
lines.add(String.format("ID:  %d", inc['id']))
lines.add(String.format("Incident types:  %s", types))
lines.add(String.format("Description:  %s", inc['description']))

String message = lines.join('\n')

Map m = ["message": message, "message_format": "text"]

return m
]]></scripting:script>
        </scripting:transformer>
        <json:object-to-json-transformer doc:name="Make JSON string for HipChat object"/>
        <https:outbound-endpoint exchange-pattern="one-way" host="api.hipchat.com" port="443" path="v2/room/${co3.hipChat.room}/notification?auth_token=${co3.hipChat.authToken}" method="POST" mimeType="application/json"  doc:name="POST to HipChat" />
        <echo-component doc:name="Echo to console"/>
    </flow>
</mule>
