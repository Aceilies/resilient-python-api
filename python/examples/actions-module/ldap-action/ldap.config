[resilient]

# Basic service connection
host=resilient
port=443
email=api@example.com
password=password

# Org is required if you have more than one
# org=Culture

# Actions Module connection
stomp_port=65001
queue=ldap

# If your Resilient server uses a self-signed TLS certificate, or some
# other certificate that is not automatically trusted by your machine,
# you need to explicitly tell the Python scripts that it should be trusted.
# To explicitly trust a site, download its certificate to a file, e.g:
#    mkdir -p ~/resilient/
#    openssl s_client -connect resilient.example.com:443 -showcerts < /dev/null 2> /dev/null | openssl x509 -outform PEM > ~/resilient/cert.cer
# then specify the file (remove the '#' from the line below):
# cafile=~/resilient/cert.cer

[ldap]

# LDAP connectivity options
server=ldap.forumsys.com
port=389
user=cn=read-only-admin,dc=example,dc=com
password=password
ssl=False

# auth can be one of: ANONYMOUS, SIMPLE, SASL or NTLM
# but SASL isn't fully implemented here
auth=SIMPLE

# default base and filter for LDAP searches
# The {} in the filter will be replaced by the escaped artifact-value
search_base=dc=example,dc=com
search_filter=(&(objectClass=person)(uid={}))


# Sections named by artifact type can override the default search base and filter

[System Name]
search_filter=(&(objectClass=device)(uid={}))

[String]
search_base=dc=example,dc=com
search_filter=(uid={})
